/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as BlogIndexRouteImport } from './routes/blog/index'
import { Route as ProjectsSlugRouteImport } from './routes/projects/$slug'
import { Route as BlogSlugRouteImport } from './routes/blog/$slug'

const PlaygroundLazyRouteImport = createFileRoute('/playground')()
const AboutLazyRouteImport = createFileRoute('/about')()
const IndexLazyRouteImport = createFileRoute('/')()
const ProjectsIndexLazyRouteImport = createFileRoute('/projects/')()
const BlogPrettyTextLazyRouteImport = createFileRoute('/blog/pretty-text')()

const PlaygroundLazyRoute = PlaygroundLazyRouteImport.update({
  id: '/playground',
  path: '/playground',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/playground.lazy').then((d) => d.Route))
const AboutLazyRoute = AboutLazyRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const ProjectsIndexLazyRoute = ProjectsIndexLazyRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/projects/index.lazy').then((d) => d.Route),
)
const BlogIndexRoute = BlogIndexRouteImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogPrettyTextLazyRoute = BlogPrettyTextLazyRouteImport.update({
  id: '/blog/pretty-text',
  path: '/blog/pretty-text',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/blog/pretty-text.lazy').then((d) => d.Route),
)
const ProjectsSlugRoute = ProjectsSlugRouteImport.update({
  id: '/projects/$slug',
  path: '/projects/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogSlugRoute = BlogSlugRouteImport.update({
  id: '/blog/$slug',
  path: '/blog/$slug',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/playground': typeof PlaygroundLazyRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/projects/$slug': typeof ProjectsSlugRoute
  '/blog/pretty-text': typeof BlogPrettyTextLazyRoute
  '/blog': typeof BlogIndexRoute
  '/projects': typeof ProjectsIndexLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/playground': typeof PlaygroundLazyRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/projects/$slug': typeof ProjectsSlugRoute
  '/blog/pretty-text': typeof BlogPrettyTextLazyRoute
  '/blog': typeof BlogIndexRoute
  '/projects': typeof ProjectsIndexLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/playground': typeof PlaygroundLazyRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/projects/$slug': typeof ProjectsSlugRoute
  '/blog/pretty-text': typeof BlogPrettyTextLazyRoute
  '/blog/': typeof BlogIndexRoute
  '/projects/': typeof ProjectsIndexLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/playground'
    | '/blog/$slug'
    | '/projects/$slug'
    | '/blog/pretty-text'
    | '/blog'
    | '/projects'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/playground'
    | '/blog/$slug'
    | '/projects/$slug'
    | '/blog/pretty-text'
    | '/blog'
    | '/projects'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/playground'
    | '/blog/$slug'
    | '/projects/$slug'
    | '/blog/pretty-text'
    | '/blog/'
    | '/projects/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  PlaygroundLazyRoute: typeof PlaygroundLazyRoute
  BlogSlugRoute: typeof BlogSlugRoute
  ProjectsSlugRoute: typeof ProjectsSlugRoute
  BlogPrettyTextLazyRoute: typeof BlogPrettyTextLazyRoute
  BlogIndexRoute: typeof BlogIndexRoute
  ProjectsIndexLazyRoute: typeof ProjectsIndexLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/playground': {
      id: '/playground'
      path: '/playground'
      fullPath: '/playground'
      preLoaderRoute: typeof PlaygroundLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/pretty-text': {
      id: '/blog/pretty-text'
      path: '/blog/pretty-text'
      fullPath: '/blog/pretty-text'
      preLoaderRoute: typeof BlogPrettyTextLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/$slug': {
      id: '/projects/$slug'
      path: '/projects/$slug'
      fullPath: '/projects/$slug'
      preLoaderRoute: typeof ProjectsSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/$slug': {
      id: '/blog/$slug'
      path: '/blog/$slug'
      fullPath: '/blog/$slug'
      preLoaderRoute: typeof BlogSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  PlaygroundLazyRoute: PlaygroundLazyRoute,
  BlogSlugRoute: BlogSlugRoute,
  ProjectsSlugRoute: ProjectsSlugRoute,
  BlogPrettyTextLazyRoute: BlogPrettyTextLazyRoute,
  BlogIndexRoute: BlogIndexRoute,
  ProjectsIndexLazyRoute: ProjectsIndexLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
